@page "/reels"
@inject БібліотекаЛент бібліотекаЛент

<НазваСторінки>Reels</НазваСторінки>

<h1>
    Reels
</h1>

@foreach (var лента in бібліотекаЛент.Ленти)
{
    <h2>@лента.Назва</h2>
    <pre>
@Форматування.Переформатувати(лента.Зміст)
    </pre>

    <button type="button" class="btn btn-primary" @onclick="() => Редагувати(лента.Назва)">Edit</button>
    <button type="button" class="btn btn-danger" @onclick="() => Видалити(лента.Назва)">Remove</button>
}

@if (Редагування)
{
    <h1>Change</h1>
}
else
{
    <h1>Add</h1>
}
<InputSelect @bind-Value="ШаблонФайлу">
    <option value="">-- Raw data --</option>
    @foreach (var файл in ДізайнФайлів)
    {
        <option value="@файл.НазваФайлу">@файл.НазваФайлу</option>
    }
</InputSelect>

<label>Label</label>
<InputText @bind-Value="Назва" disabled="@Редагування" />

@if (Редагування)
{
    <button type="button" class="btn btn-primary" @onclick="Зберегти">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="Відмінити">Cancel</button>
}
else
{
    <button type="button" class="btn btn-primary" @onclick="Додати">Add</button>
}


<div class="row">
    <div class="col">
        <label>Content</label>
    </div>
</div>
<div class="row">
    <div class="col">
        @if (ВибранийДізайнФайлів is null)
        {
            <InputText @bind-Value="Зміст" />
        }
        else
        {
            <РедакторФайла ДізайнФайлу="ВибранийДізайнФайлів" @bind-Зміст="Зміст" />
            <pre>@ВідоформатуватиЛенту(Зміст)</pre>
        }
    </div>
</div>


@code {
    public string Назва { get; set; } = "";
    public string Зміст { get; set; } = "";
    public string ШаблонФайлу { get; set; } = "";
    public bool Редагування { get; set; }

    public ДізайнФайлу[] ДізайнФайлів = [Приклади.Інвентар, Приклади.Ціна, Приклади.ОціненийІнвентар, Приклади.НеоціненийІнвентар, Приклади.Помилка,];

    public ДізайнФайлу? ВибранийДізайнФайлів => ДізайнФайлів.FirstOrDefault(дф => дф.НазваФайлу == ШаблонФайлу);

    protected override async Task OnInitializedAsync()
    {
        await бібліотекаЛент.ЗавантажитиІзЛокальногоСховища();
        await base.OnInitializedAsync();
    }

    public async Task Додати()
    {
        await бібліотекаЛент.ДодатиЛенту(Назва, Зміст);
    }

    public async Task Видалити(string назва)
    {
        await бібліотекаЛент.ВидалитиЛенту(назва);
    }

    public async Task Зберегти()
    {
        await бібліотекаЛент.ЗамінитиЛенту(Назва, Зміст);
        Відмінити();
    }

    public void Відмінити()
    {
        Редагування = false;
        Назва = "";
        Зміст = "";
    }

    public void Редагувати(string назва)
    {
        Редагування = true;
        var л = бібліотекаЛент.Ленти.First(_ => _.Назва == назва);
        Назва = л.Назва;
        Зміст = л.Зміст;
    }

    public static string ВідоформатуватиЛенту(string зміст)
    {
        return string.Join(Environment.NewLine, зміст.Chunk(12).Select(x => new string(x)));
    }
}
