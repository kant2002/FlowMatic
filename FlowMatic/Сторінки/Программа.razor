@page "/program"
@inject БібліотекаЛент бібліотекаЛент
@inject ВіртуальнаМашина ВіртуальнаМашина

<НазваСторінки>Program</НазваСторінки>
@{
    var резервації = ВіртуальнаМашина.РезерваціяПривідів.ToList();
}
<h1>
    Program
</h1>

<button type="button" class="btn btn-secondary" @onclick="Приклад1">Sample 1</button>
<button type="button" class="btn btn-secondary" @onclick="Скомпілювати">Compile</button>
<button type="button" class="btn btn-primary" @onclick="Запустити">Run</button>
<button type="button" class="btn btn-primary" @onclick="Крок">Step</button>

@if (ВіртуальнаМашина.ФлагОстанова)
{
    <span class="text-danger">
        &nbsp;
        <i class="bi bi-x-octagon-fill"></i>
    </span>
    
}

<p>
    Кількість Приводів @ВіртуальнаМашина.КількістьПриводів
    Кількість Файлів @ВіртуальнаМашина.КількістьФайлів
</p>

<div class="row">
    @for (var i = 0; i < ВіртуальнаМашина.СервоПривіди.Length; i++)
    {
        var п = ВіртуальнаМашина.СервоПривіди[i];
        <div class="col-3">
            <select>
                <option value="">-- Empty --</option>
                @foreach (var лента in бібліотекаЛент.Ленти)
                {
                    <option>@лента.Назва</option>
                }
            </select>
            <text> </text>
            @for (var j = 0; j < резервації.Count; j++)
            {
                var ф = резервації[j];
                if (ф.АлокованіПриводи.Contains(i + 1))
                {
                    @ф.ДізайнФайлу.НазваФайлу
                    <text> (item size: </text>
                    @ф.ДізайнФайлу.ДізайнЕлементів.РозмірЕлемента
                    <text>)</text>
                }
            }

            @if (п is not null && п.КінецьДаних)
            {
                <span class="text-danger">
                    &nbsp;
                    <i class="bi bi-bandaid"></i>
                </span>
            }
        </div>
    }
</div>

<pre>
@foreach (var ф in ВіртуальнаМашина.РезерваціяПривідів)
{
    @ф.ДізайнФайлу.НазваФайлу <text> - </text> @string.Join(", ", ф.АлокованіПриводи)
    <br/>
}
</pre>

<h2>Code</h2>
<code>
    <pre>
@ЛентаВводу.ІсходнийКод
    </pre>
</code>
<h2>Files</h2>
@foreach (var файл in ЛентаВводу.Файли)
{
<pre>
@Форматування.Переформатувати(файл)
</pre>
}

@code {
    private string ісходнийКод;

    public string ІсходнийКод
    { 
        get => ісходнийКод;
        set
        {
            ісходнийКод = value;
        }
    }

    public ЛентаВводу ЛентаВводу = new();

    protected override async Task OnInitializedAsync()
    {
        await бібліотекаЛент.ЗавантажитиІзЛокальногоСховища();
        await base.OnInitializedAsync();
    }

    void Приклад1()
    {
        ЛентаВводу = Приклади.Приклад1;
    }

    void Запустити()
    {
        ВіртуальнаМашина.ВиконатиПрограму();
    }

    void Крок()
    {
        ВіртуальнаМашина.ВиконатиРядокПрограми();
    }

    void Скомпілювати()
    {
        ВіртуальнаМашина.СкомпілюватиПрограму(ЛентаВводу);
    }
}
